============================= test session starts ==============================
collecting ... collected 12 items

main.py::test_create_pet PASSED                                          [  8%]
main.py::test_update_pet PASSED                                          [ 16%]
main.py::test_find_pets_by_status PASSED                                 [ 25%]
main.py::test_find_pets_by_tags PASSED                                   [ 33%]
main.py::test_get_pet_by_id PASSED                                       [ 41%]
main.py::test_delete_pet PASSED                                          [ 50%]
main.py::test_invalid_pet_creation PASSED                                [ 58%]
main.py::test_get_nonexistent_pet PASSED                                 [ 66%]
main.py::test_delete_nonexistent_pet PASSED                              [ 75%]
main.py::test_upload_pet_image PASSED                                    [ 83%]
main.py::test_update_pet_with_form FAILED                                [ 91%]
main.py:207 (test_update_pet_with_form)
400 != 200

Expected :200
Actual   :400
<Click to see difference>

@pytest.mark.positive
    def test_update_pet_with_form():
        """Тест обновления питомца через POST /pet/{petId}."""
        # Создаем питомца
        pet_data = {
            "id": 999,
            "name": "TestPet",
            "category": {"id": 1, "name": "Dogs"},
            "photoUrls": ["http://example.com/photo"],
            "tags": [{"id": 1, "name": "tag1"}],
            "status": "available"
        }
        create_response = create_pet(pet_data)
        assert create_response.status_code == 200
    
        # Обновляем питомца через POST /pet/{petId}
        pet_id = pet_data["id"]
        response = update_pet_with_form(pet_id, name="UpdatedPet", status="sold")
>       assert response.status_code == 200
E       assert 400 == 200
E        +  where 400 = <Response [400]>.status_code

main.py:226: AssertionError

main.py::test_crud_operations FAILED                                     [100%]
main.py:229 (test_crud_operations)
404 != 200

Expected :200
Actual   :404
<Click to see difference>

@pytest.mark.e2e
    def test_crud_operations():
        """End-to-end тест CRUD операций."""
        # Создание питомца
        pet_data = {
            "id": 1000,
            "name": "E2EPet",
            "category": {"id": 1, "name": "Dogs"},
            "photoUrls": ["http://example.com/photo"],
            "tags": [{"id": 1, "name": "tag1"}],
            "status": "available"
        }
        create_response = create_pet(pet_data)
        assert create_response.status_code == 200
        coverage.record_test_result("POST /pet", create_response.status_code)
    
        # Получение питомца
        pet_id = pet_data["id"]
        get_response = get_pet_by_id(pet_id)
>       assert get_response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404]>.status_code

main.py:249: AssertionError

==================================================
               API COVERAGE REPORT                
==================================================
1. Среднее покрытие эндпоинтов раздела Pet: 42.7%
2. Покрытие статус-кодов раздела Pet: 42.9%
3. Полностью покрытые эндпоинты API: 0.0%
4. Общее покрытие статус-кодов API: 20.0%

Детали по endpoint'ам:
PUT /pet: 1/4 (25.0%) ------> ['200'] / ['200', '400', '404', '422']
POST /pet: 2/3 (66.7%) ------> ['200', '400'] / ['200', '400', '422']
GET /pet/findByStatus: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/findByTags: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/{petId}: 2/3 (66.7%) ------> ['200', '404'] / ['200', '400', '404']
POST /pet/{petId}: 0/2 (0.0%) ------> [] / ['200', '400']
DELETE /pet/{petId}: 1/2 (50.0%) ------> ['200'] / ['200', '400']
POST /pet/{petId}/uploadImage: 1/3 (33.3%) ------> ['415'] / ['200', '400', '404']
GET /store/inventory: 0/1 (0.0%) ------> [] / ['200']
POST /store/order: 0/3 (0.0%) ------> [] / ['200', '400', '422']
GET /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
POST /user: 0/1 (0.0%) ------> [] / ['200']
POST /user/createWithList: 0/1 (0.0%) ------> [] / ['200']
GET /user/login: 0/2 (0.0%) ------> [] / ['200', '400']
GET /user/logout: 0/1 (0.0%) ------> [] / ['200']
GET /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
PUT /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']


================== 2 failed, 10 passed, 12 warnings in 16.43s ==================

Process finished with exit code 1
