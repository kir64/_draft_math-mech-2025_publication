============================= test session starts ==============================
collecting ... collected 10 items

main.py::test_add_new_pet PASSED                                         [ 10%]
main.py::test_get_pet_by_id_success PASSED                               [ 20%]
main.py::test_pet_crud_workflow FAILED                                   [ 30%]
main.py:79 (test_pet_crud_workflow)
500 != 200

Expected :200
Actual   :500
<Click to see difference>

def test_pet_crud_workflow():
        # 1. Создание питомца
        create_payload = {
            "category": {"name": "test_category"},
            "name": "test_pet",
            "photoUrls": ["url1"],
            "tags": [{"name": "test_tag"}],
            "status": "available"
        }
        create_response = create_pet(create_payload)
>       assert create_response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500]>.status_code

main.py:90: AssertionError

main.py::test_find_pets_by_status_available PASSED                       [ 40%]
main.py::test_find_pets_by_tags_single PASSED                            [ 50%]
main.py::test_update_pet_with_invalid_id PASSED                          [ 60%]
main.py::test_get_pet_by_invalid_id PASSED                               [ 70%]
main.py::test_delete_pet_by_invalid_id PASSED                            [ 80%]
main.py::test_add_pet_with_missing_required_field PASSED                 [ 90%]
main.py::test_upload_image_for_nonexistent_pet FAILED                    [100%]
main.py:171 (test_upload_image_for_nonexistent_pet)
415 != 404

Expected :404
Actual   :415
<Click to see difference>

def test_upload_image_for_nonexistent_pet():
        pet_id = 999999
        file_path = "test_image.jpg" # Создайте пустой файл test_image.jpg для теста
        try:
            with open(file_path, 'w') as f:
                f.write("test content")
            response = upload_pet_image(pet_id, file_path)
>           assert response.status_code == 404
E           assert 415 == 404
E            +  where 415 = <Response [415]>.status_code

main.py:179: AssertionError

==================================================
			API COVERAGE REPORT			
==================================================
1. Среднее покрытие эндпоинтов раздела Pet: 27.5%
2. Покрытие статус-кодов раздела Pet: 27.6%
3. Полностью покрытые эндпоинты API: 0.0%
4. Общее покрытие статус-кодов API: 12.5%

Детали по endpoint'ам:
PUT /pet: 1/5 (20.0%) ------> ['400'] / ['200', '400', '404', '422', 'default']
POST /pet: 2/4 (50.0%) ------> ['200', '500'] / ['200', '400', '422', 'default']
GET /pet/findByStatus: 1/3 (33.3%) ------> ['200'] / ['200', '400', 'default']
GET /pet/findByTags: 1/3 (33.3%) ------> ['200'] / ['200', '400', 'default']
GET /pet/{petId}: 2/4 (50.0%) ------> ['200', '400'] / ['200', '400', '404', 'default']
POST /pet/{petId}: 0/3 (0.0%) ------> [] / ['200', '400', 'default']
DELETE /pet/{petId}: 1/3 (33.3%) ------> ['400'] / ['200', '400', 'default']
POST /pet/{petId}/uploadImage: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
GET /store/inventory: 0/2 (0.0%) ------> [] / ['200', 'default']
POST /store/order: 0/4 (0.0%) ------> [] / ['200', '400', '422', 'default']
GET /store/order/{orderId}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
DELETE /store/order/{orderId}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
POST /user: 0/2 (0.0%) ------> [] / ['200', 'default']
POST /user/createWithList: 0/2 (0.0%) ------> [] / ['200', 'default']
GET /user/login: 0/3 (0.0%) ------> [] / ['200', '400', 'default']
GET /user/logout: 0/2 (0.0%) ------> [] / ['200', 'default']
GET /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
PUT /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
DELETE /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']

=========================

==================================================
                API COVERAGE REPORT                 
==================================================

1. Среднее покрытие эндпоинтов раздела Pet: 27.5%
2. Покрытие статус-кодов раздела Pet: 27.6%
3. Полностью покрытые эндпоинты API: 0.0%
4. Общее покрытие статус-кодов API: 12.5%

Детали по endpoint'ам:
DELETE /pet/{petId}: 1/3 (33.3%) ------> ['400'] / ['200', '400', 'default']
DELETE /store/order/{orderId}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
DELETE /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
GET /pet/findByStatus: 1/3 (33.3%) ------> ['200'] / ['200', '400', 'default']
GET /pet/findByTags: 1/3 (33.3%) ------> ['200'] / ['200', '400', 'default']
GET /pet/{petId}: 2/4 (50.0%) ------> ['200', '400'] / ['200', '400', '404', 'default']
GET /store/inventory: 0/2 (0.0%) ------> [] / ['200', 'default']
GET /store/order/{orderId}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
GET /user/login: 0/3 (0.0%) ------> [] / ['200', '400', 'default']
GET /user/logout: 0/2 (0.0%) ------> [] / ['200', 'default']
GET /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
POST /pet: 2/4 (50.0%) ------> ['200', '500'] / ['200', '400', '422', 'default']
POST /pet/{petId}: 0/3 (0.0%) ------> [] / ['200', '400', 'default']
POST /pet/{petId}/uploadImage: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']
POST /store/order: 0/4 (0.0%) ------> [] / ['200', '400', '422', 'default']
POST /user: 0/2 (0.0%) ------> [] / ['200', 'default']
POST /user/createWithList: 0/2 (0.0%) ------> [] / ['200', 'default']
PUT /pet: 1/5 (20.0%) ------> ['400'] / ['200', '400', '404', '422', 'default']
PUT /user/{username}: 0/4 (0.0%) ------> [] / ['200', '400', '404', 'default']

=========================


========================= 2 failed, 8 passed in 11.51s =========================

Process finished with exit code 1
